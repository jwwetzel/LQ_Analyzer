#!/usr/bin/env python

#########################################################################################################
#                                                                                                       #
#  File: makeMajPlots_v2.py                                                                             #
#  Author: James Wetzel                                                                                 #
#  Usage:  'python makeMajPlots_v2.py /Directory/to/majoranaOutput.root'                                #
#  Description:  Script to take histograms in the root files generated by the Majorana Analysis file:   #
#    /uscms/home/jwwetzel/WorkingArea/Majorana/CMSSW_5_3_3_patch2_LQ/test/LQanalyzer/Analyzer.cc        #
#    and make them beautiful, while saving them to a directory named Hists.                             #
#                                                                                                       #
#########################################################################################################


######################
## Conventions:     ##
## d_ = Dictionary  ##
## s_ = String      ##
## i_ = Int         ##
## f_ = Float       ##
## l_ = List        ##
## h_ = Histogram   ##
######################

print "Importing modules"
import sys
import optparse
import os
import ROOT
from math import exp, sqrt

################
## ROOT SETUP ##
################
print "Setting ROOT options"
ROOT.gROOT.SetBatch()
ROOT.gROOT.SetStyle("Plain")
ROOT.gStyle.SetOptStat(10)
ROOT.gStyle.SetOptFit(111111)
ROOT.gStyle.SetOptTitle(1)
ROOT.gStyle.SetPalette(1)
ROOT.gStyle.SetNdivisions(405,"x");
ROOT.gStyle.SetEndErrorSize(0.)
ROOT.gStyle.SetErrorX(0.001)


###########################
## Option Parser - Input ##
###########################
### Takes first argument for input directory
parser = optparse.OptionParser("usage: %prog [options]\
                               <input directory> \n")
options, args = parser.parse_args()

if len(args) != 1:
  print "Please specify input dir.  Exiting."
  sys.exit()

s_indir  = args[0]+"/"

############################
## Dictionary Definitions ##
############################
d_massPoints = {} # Mass points to be analyzed
d_hists = {}      # Imported histograms
d_tfiles = {}     # Imported rootFiles
d_canv = {}       # Canvases for the histograms
d_f_scale = {}    # Scale factors for normalizing histograms
d_pad = {}        # Pads of each Canvas
d_histList = {}   # List of histograms
d_plot = {}       # Container for every plot

############################
## Histogram  Definitions ##
############################

yAxisTitle = "Normalized Number of Events"

l_histList = ["histName","histTitle","rebin","x1","x2","y1","y2","xTitle","xTitleOffset","yTitle","yTitleOffset","ylog","outfileName"]
d_histList[0] = ["Jet_BTag_CSV_LMT","BTag Jet Distribution for CSV Pass, L, M, T","1","0.0","4.0","0.0","1.0","# Jets by CSV Disc.","0.9",yAxisTitle,"1.7","no","JetBTag/JetBTag"]
### Commented out in order to reduce the number of plots made
#d_histList[0] = ["MuonEta_AllMu","All Muon Eta Distribution for MN Mass","25","-3.5","3.5","0.0","0.1","\eta","0.5",yAxisTitle,"1.7","no","MuonEta/All_Muon_Eta"]
#d_histList[1] = ["MuonEta_TightMu","Tight Muon Eta Distribution for MN Mass","25","-3.5","3.5","0.0","0.1","\eta","0.5",yAxisTitle,"1.7","no","MuonEta/Tight_Muon_Eta"]
#
#d_histList[2] = ["MuonPhi_AllMu","All Muon Phi Distribution for MN Mass","25","-4.5","4.5","0.0","0.035","\phi","0.7",yAxisTitle,"1.9","no","MuonPhi/All_Muon_Phi"]
#d_histList[3] = ["MuonPhi_TightMu","Tight Muon Phi Distribution for MN Mass","25","-4.5","4.5","0.0","0.035","\phi","0.7",yAxisTitle,"1.9","no","MuonPhi/Tight_Muon_Phi"]
#
#d_histList[4] = ["MuonPt_AllMu","ALL Muon PT Distribution for MN Mass","10","0.","300.","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Muon_PT"]
#d_histList[5] = ["MuonPt_AllMu1","ALL Leading Muon PT Distribution for MN Mass","10","0.","300.","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Leading_Muon_PT"]
#d_histList[6] = ["MuonPt_AllMu2","ALL Second Muon PT Distribution for MN Mass","10","0.","300.","0","0.7","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Secondary_Muon_PT"]
#
#d_histList[7] = ["MuonPt_TightMu","TIGHT Muon PT Distribution for MN Mass","10","0.","300.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Muon_PT"]
#d_histList[8] = ["MuonPt_TightMu1","TIGHT Leading Muon PT Distribution for MN Mass","10","0.","300.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Leading_Muon_PT"]
#d_histList[9] = ["MuonPt_TightMu2","TIGHT Second Muon PT Distribution for MN Mass","10","0.","300.","0","0.9","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Secondary_Muon_PT"]
#
#d_histList[10] = ["MuonRel_AllMu","ALL Muon Rel Iso Distribution for MN Mass","10","0.","1.","0","1.0","Rel. Iso","0.7",yAxisTitle,"1.7","no","MuonRelIso/All_Muon_Rel_Iso"]
#d_histList[11] = ["MuonRel_TightMu","TIGHT Muon Rel Iso Distribution for MN Mass","2","0.","0.2","0","0.9","Rel. Iso","0.7",yAxisTitle,"1.7","no","MuonRelIso/Tight_Muon_Rel_Iso"]
#
#d_histList[12] = ["MuonNum_AllMu","ALL Muon Num Distribution for MN Mass ","1","0.","5.0","0","0.8","Num","0.7",yAxisTitle,"1.7","no","MuonNum/AllMuonNum"]
#d_histList[13] = ["MuonNum_TightMu","TIGHT Muon Num Distribution for MN Mass ","1","0.","5.0","0","0.7","Num","0.7",yAxisTitle,"1.7","no","MuonNum/TightMuonNum"]
#
#d_histList[14] = ["Jet_Eta","All Jet Eta Distribution for MN Mass ","25","-3.5","3.5","0.0","0.1","\eta","0.5",yAxisTitle,"1.7","no","JetEta/All_Jet_Eta"]
#
#d_histList[15] = ["Jet_Phi","All Jet Phi Distribution for MN Mass ","25","-4.5","4.5","0.0","0.035","\phi","0.7",yAxisTitle,"1.9","no","JetPhi/All_Jet_Phi"]
#
#d_histList[16] = ["Jet_Pt","ALL Jet PT Distribution for MN Mass ","10","0.","300.","0","0.8","GeV","0.7",yAxisTitle,"1.7","no","JetPT/All_Jet_PT"]
#d_histList[17] = ["Jet1_Pt","ALL Leading Jet PT Distribution for MN Mass ","10","0.","300.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","JetPT/All_Leading_Jet_PT"]
#d_histList[18] = ["Jet2_Pt","ALL Second Jet PT Distribution for MN Mass ","10","0.","300.","0","1.0","GeV","0.7",yAxisTitle,"1.7","no","JetPT/All_Secondary_Jet_PT"]
#
#d_histList[19] = ["Jet_Num","ALL Jet Num Distribution for MN Mass ","1","0.","9.0","0","0.7","Num","0.7",yAxisTitle,"1.7","no","JetNum/All_Jet_Num"]
#d_histList[20] = ["Jet_Num_AllCuts","Jet Num with ALL cuts Distribution for MN Mass ","1","0.","9.0","0","0.7","Num","0.7",yAxisTitle,"1.7","no","JetNum/All_Jet_Cuts_Num"]
#
#d_histList[21] = ["MassJJ_Full","ALL JJ Mass Distribution for MN Mass ","10","0.","400.","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","JJMass/JJ_Mass_Full"]
#d_histList[22] = ["MassJJMuMu_Full","JJ MuMu Distribution for MN Mass ","2","0.","800.","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","JJMuMu/JJ_MuMu_Mass_Full"]
#d_histList[23] = ["MassJJMu1_Full","ALL JJ Leading Muon Distribution for MN Mass ","2","0.","400.","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","JJMu1/JJ_Mu1_Mass_Full"]
#d_histList[24] = ["MassJJMu2_Full","ALL JJ Second Muon Distribution for MN Mass ","2","0.","600.","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","JJMu2/JJ_Mu2_Mass_Full"]
#
#d_histList[25] = ["MET","MET No Cuts Distribution for MN Mass ","8","0.","300.","0","0.3","GeV","0.7",yAxisTitle,"1.7","no","MET/MET_No_Cuts"]
#d_histList[26] = ["MET_wCuts","MET With Cuts Distribution for MN Mass ","8","0.","300.","0","0.3","GeV","0.7",yAxisTitle,"1.7","no","MET/MET_With_Cuts"]
#
#d_histList[27] = ["MuonRelCh_AllMu","ALL Muon Charged Hadron Isolation for MN Mass ","10","0.","1.0","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/All_Muon_Rel_CH"]
#d_histList[28] = ["MuonRelNeu_AllMu","ALL Muon Neutral Hadron Isolation for MN Mass ","10","0.","1.0","0","0.8","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/All_Muon_Rel_NH"]
#d_histList[29] = ["MuonRelPho_AllMu","ALL Muon Photon Isolation for MN Mass ","10","0.","1.0","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/All_Muon_Rel_Photon"]
#d_histList[30] = ["MuonRelCh_TightMu","TIGHT Muon Charged Hadron Isolation for MN Mass ","10","0.","1.0","0","0.7","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/Tight_Muon_Rel_CH"]
#d_histList[31] = ["MuonRelNeu_TightMu","TIGHT Muon Neutral Hadron Isolation for MN Mass ","10","0.","1.0","0","0.9","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/Tight_Muon_Rel_NH"]
#d_histList[32] = ["MuonRelPho_TightMu","TIGHT Muon Photon Isolation for MN Mass ","10","0.","1.0","0","0.4","GeV","0.7",yAxisTitle,"1.7","no","MuonIso/Tight_Muon_Rel_Photon"]
#
#d_histList[33] = ["MuonEcal_AllMu","ALL Muon Ecal For MN Mass ","1","0","2","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonEcal/All_Muon_Ecal"]
#d_histList[34] = ["MuonEcal_TightMu","TIGHT Muon Ecal For MN Mass ","1","0","2","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonEcal/Tight_Muon_Ecal"]
#                  
#d_histList[35] = ["MuonHcal_AllMu","ALL Muon Hcal For MN Mass ","1","0","5","0","0.1","GeV","0.7",yAxisTitle,"1.7","no","MuonHcal/All_Muon_Hcal"]
#d_histList[36] = ["MuonHcal_TightMu","TIGHT Muon Hcal For MN Mass ","1","0","5","0","0.1","GeV","0.7",yAxisTitle,"1.7","no","MuonHcal/Tight_Muon_Hcal"]
#
#d_histList[37] = ["MC_MuEta","MC Truth Muon Eta Distribution for MN Mass","25","-3.5","3.5","0.0","0.1","\eta","0.5",yAxisTitle,"1.7","no","MC/MC_Muon_Eta"]
#d_histList[38] = ["MC_MuPhi","MC Truth Muon Phi Distribution for MN Mass","25","-4.5","4.5","0.0","0.035","\phi","0.7",yAxisTitle,"1.9","no","MC/MC_Muon_Phi"]
#
#d_histList[39] = ["MC_JetPt","MC Jet PT Distribution for MN Mass ","10","0.","300.","0","0.8","GeV","0.5",yAxisTitle,"1.7","no","MC/MC_Jet_PT"]
#d_histList[40] = ["MC_JetPt1","MC Leading Jet PT Distribution for MN Mass ","10","0.","300.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_Leading_Jet_PT"]
#d_histList[41] = ["MC_JetPt2","MC Second Jet PT Distribution for MN Mass ","10","0.","300.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_Secondary_Jet_PT"]
#d_histList[42] = ["MC_JJ_Mass","MC JJ Mass Distribution for MN Mass ","10","0.","200.","0","0.6","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_JJ_Mass"]
#d_histList[43] = ["MC_4_Mass","MC JJ MuMu Mass Distribution for MN Mass ","2","0.","800.","0","0.15","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_JJ_MuMu_Mass"]
#
#d_histList[44] = ["MC_real3N_Mass","MC Real 3 MN Mass Distribution for MN Mass ","2","0.","800.","0","0.15","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_Real_3_MN_Mass"]
#d_histList[45] = ["MC_real1N_Mass","MC Real 1 MN Mass Distribution for MN Mass ","2","0.","800.","0","0.15","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_Real_1_MN_Mass"]
#d_histList[46] = ["MC_fake3N_Mass","MC Fake 3 MN Mass Distribution for MN Mass ","2","0.","800.","0","0.15","GeV","0.7",yAxisTitle,"1.7","no","MC/MC_Fake_3_MN_Mass"]
#
#d_histList[47] = ["Jet1Match_Pt","Jet Match 1 PT Distribution for MN Mass ","10","0.","300.","0","0.8","GeV","0.5",yAxisTitle,"1.7","no","Matching/Jet_1_Match_PT"]
#d_histList[48] = ["Jet2Match_Pt","Jet Match 2 PT Distribution for MN Mass ","10","0.","300.","0","0.8","GeV","0.5",yAxisTitle,"1.7","no","Matching/Jet_2_Match_PT"]
#
#d_histList[49] = ["Jet1Match","Jet 1 Match Num Distribution for MN Mass ","1","0.","9.0","0","0.7","Num","0.7",yAxisTitle,"1.7","no","Matching/Jet_1_Match_Num"]
#d_histList[50] = ["Jet2Match","Jet 2 Match Num Distribution for MN Mass ","1","0.","9.0","0","0.7","Num","0.7",yAxisTitle,"1.7","no","Matching/Jet_2_Match_Num"]




#### Auxilary Plots
#d_histList[33] = ["MuonPt_AllMu","ALL Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Muon_PT_No_Log"]
#d_histList[34] = ["MuonPt_AllMu1","ALL Leading Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","0.85","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Leading_Muon_PT_No_Log"]
#d_histList[35] = ["MuonPt_AllMu2","ALL Second Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","1.0","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/All_Secondary_Muon_PT_No_Log"]
#
#d_histList[36] = ["MuonPt_TightMu","TIGHT Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","0.5","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Muon_PT_No_Log"]
#d_histList[37] = ["MuonPt_TightMu1","TIGHT Leading Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","1.0","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Leading_Muon_PT_No_Log"]
#d_histList[38] = ["MuonPt_TightMu2","TIGHT Second Muon PT Distribution (No_Log) for MN Mass","10","0.","300.","0","1.0","GeV","0.7",yAxisTitle,"1.7","no","MuonPT/TIGHT_Secondary_Muon_PT_No_Log"]

##########################
# rootFiles to loop over #
##########################
d_massPoints["R04"] = [50,70,90,100,125,150,175,200,225,250,275,300,325,350,375,400,500,600,700]
#massPoints["R03"] = [50,70,90,100,175,275,300,350]
#d_massPoints["R04"] = [50,500]

##########################
# Iso Cones to loop over #
##########################
#isoCone = ["R03","R04"]
d_isoCone = ["R04"]

#############################
# Import all the histograms #
#############################
for s_iC in d_isoCone:
  for i_mp in d_massPoints[s_iC]:
    #d_tfiles[i_mp] = ROOT.TFile(os.path.join(s_indir,"MNToMuMu_TuneZ2star_M"+str(i_mp)+".root"))
    d_tfiles[i_mp] = ROOT.TFile(os.path.join(s_indir,"Combined_MN_Mass_"+str(i_mp)+".root"))
    for i in xrange(0,len(d_histList)):
      d_plot[i,i_mp] = dict(zip(l_histList,d_histList[i]))
      s_hist = d_plot[i,i_mp].get('histName')
      d_hists[s_hist,i_mp,s_iC] = ROOT.TH1F()
      d_tfiles[i_mp].GetObject(s_hist,d_hists[s_hist,i_mp,s_iC])
      d_hists[s_hist,i_mp,s_iC].SetNameTitle(str(i_mp)+s_hist,str(i_mp)+s_hist)

##################
# Make the Plots #
##################
for i in xrange(0,len(d_histList)):
  ### ROOT Style Options ####
  ROOT.gStyle.SetOptStat(0) #
  ###########################
  
  count = 'a'
  for i_mp in d_massPoints["R04"]:
    s_name = d_plot[i,i_mp].get('histName')
    d_canv[i_mp,i] = ROOT.TCanvas(d_plot[i,i_mp].get('histName')+"_MN_"+str(i_mp),d_plot[i,i_mp].get('histName')+"_MN_"+str(i_mp),500,500)
    d_pad[i,i_mp,"R04"] = d_canv[i_mp,i].GetPad(0)
    d_pad[i,i_mp,"R04"].SetLeftMargin(0.15)
    d_hists[s_name,i_mp,"R04"].SetTitle(d_plot[i,i_mp].get('histTitle')+" "+str(i_mp))
    d_hists[s_name,i_mp,"R04"].Rebin(int(d_plot[i,i_mp].get('rebin')))
    d_hists[s_name,i_mp,"R04"].SetFillColor(4)
    d_hists[s_name,i_mp,"R04"].SetFillStyle(3002)
    d_f_scale[i_mp,i] = 1/d_hists[s_name,i_mp,"R04"].GetEntries()
    d_hists[s_name,i_mp,"R04"].Scale(d_f_scale[i_mp,i])
    d_hists[s_name,i_mp,"R04"].GetXaxis().SetRangeUser(float(d_plot[i,i_mp].get('x1')),float(d_plot[i,i_mp].get('x2')))
    d_hists[s_name,i_mp,"R04"].GetYaxis().SetRangeUser(float(d_plot[i,i_mp].get('y1')),float(d_plot[i,i_mp].get('y2')))
    d_hists[s_name,i_mp,"R04"].GetYaxis().SetTitle(d_plot[i,i_mp].get('yTitle'))
    d_hists[s_name,i_mp,"R04"].GetYaxis().SetTitleOffset(float(d_plot[i,i_mp].get('yTitleOffset')))
    d_hists[s_name,i_mp,"R04"].GetXaxis().SetTitle(d_plot[i,i_mp].get('xTitle'))
    d_hists[s_name,i_mp,"R04"].GetXaxis().SetTitleSize(0.04)
    d_hists[s_name,i_mp,"R04"].GetXaxis().SetTitleOffset(float(d_plot[i,i_mp].get('xTitleOffset')))
    if d_plot[i,i_mp].get('ylog') == 'yes':
      d_canv[i_mp,i].SetLogy()
    d_hists[s_name,i_mp,"R04"].DrawCopy()
    d_canv[i_mp,i].SaveAs("Hists/"+d_plot[i,i_mp].get('outfileName')+"_"+chr(ord(count))+"_"+str(i_mp)+".png")
    d_canv[i_mp,i].Close()
    count = chr(ord(count) + 1)
